<h2>性能</h2>
<p>一般来说&#xff0c;提到性能&#xff0c;我们在乎的多数是网络和存储的延迟、吞吐量&#xff0c;处理器的利用率等等。Brendan博客有一个关于SmartMachie、KVM、Xen的性能讨论<a target="_blank" href="http://dtrace.org/blogs/brendan/2013/01/11/virtualization-performance-zones-kvm-xen/" rel="noopener noreferrer">文章</a>&#xff08;<a target="_blank" href="http://dtrace.org/blogs/brendan/2013/01/11/virtualization-performance-zones-kvm-xen/" rel="noopener noreferrer">Virtualization Performance: Zones, KVM, Xen</a>&#xff09;&#xff0c;我也翻译了一下&#xff08;<a target="_blank" href="http://blog.csdn.net/babyfacer/article/details/21107513" rel="noopener noreferrer">链接</a>&#xff09;。对于一般的计算&#xff0c;SmartOS和Linux区别不大&#xff0c;也许在任务调度方式上有些不同。</p>
<p>在网络方面&#xff0c;SmartOS使用了一个核心机制&#xff0c;叫做<a target="_blank" href="http://sunaytripathi.wordpress.com/2010/03/25/crossbow-solaris-network-virtualization-resource-provisioning/" rel="noopener noreferrer">crossbow</a>。除了提供虚拟的网络设备&#xff0c;相比Linux虚拟机&#xff0c;crossbow在SmartMachine上提供了更好的吞吐和延迟&#xff0c;也不会有网络抖动&#xff0c;从而有更好的传输效果&#xff0c;比如减少了重传。每个SmartMachine可以设置多达32个VNIC。有兴趣的可以看看这些文章&#xff1a;<a target="_blank" href="http://blog.csdn.net/hifrog/article/details/6087686" rel="noopener noreferrer">Solaris Crossbow实践指南&#xff08;一&#xff09;&#xff1a;VNIC和网卡复用</a>&#xff0c;<a target="_blank" href="http://blog.csdn.net/hifrog/article/details/6116793" rel="noopener noreferrer">Solaris Crossbow实践指南&#xff08;二&#xff09;&#xff1a;虚拟网络和etherstub </a>&#xff0c;作者使用VNIC和Zone创建了一个新的HTTP服务器而没有添加新的硬件&#xff0c;采用VNIC技术提高了网络设备的利用率和复用性。而且crossbow还能在一个没有网络连接的系统中&#xff0c;采用etherstub和VNIC创建一个虚拟的网络环境&#xff0c;即能很方便地在一个物理主机上建立一个趋近于真实的并且“与世隔绝”的网络环境。还有这篇文章&#xff1a;<a target="_blank" href="http://www.oracle.com/technetwork/cn/articles/servers-storage-admin/o11-095-s11-app-traffic-1508688-zhs.html" rel="noopener noreferrer">如何使用 Oracle Solaris 11 网络虚拟化和资源管理限制应用程序流量</a>&#xff0c;了解了如何用crossbow技术对数据链路和用户定义的流应用带宽限制进行网络流量管理&#xff0c;如何限制通过数据链路的所有流量&#xff0c;应用于流的带宽限制可以基于网络数据包的特征。这些技术可以单独使用&#xff0c;也可以组合使用&#xff0c;从而可以创建灵活的受控环境以满足网络资源管理的所有需要。这些文章都是几年前的&#xff0c;可见那时crossbow已经将网络虚拟化做得很好了。<br /></p>
<p>就虚拟化而言&#xff0c;当运行SmartMachine时&#xff0c;进行网络I/O的代码路径和裸机运行SmartOS本身一样。在SmartOS的KVM里运行Linux和Windows时&#xff0c;使用crossbow做底层&#xff0c;还需要在虚拟机的操作系统网络代码中运行额外的代码&#xff0c;从而增加了额外的开销。同样道理&#xff0c;SmartMachine直接在SmartOS上进行磁盘I/O操作&#xff0c;但Linux和Windows需要在guest OS里运行额外的代码进行磁盘I/O。</p>
<p>就文件系统&#xff0c;SmartOS使用了ZFS&#xff0c;每个SmartMachine运行自己的ZFS数据集&#xff0c;每个Linux/Windows虚拟机有自己的ZFS卷。ZFS使用了<a target="_blank" href="http://www.c0t0d0s0.org/archives/5329-Some-insight-into-the-read-cache-of-ZFS-or-The-ARC.html" rel="noopener noreferrer">Adjustable Replacement Cache (ARC)</a>算法&#xff0c;在缓存文件系统数据或元数据方面做得非常好。这个<a target="_blank" href="https://www.youtube.com/watch?v&#61;xkDqe6rIMa0" rel="noopener noreferrer">视频</a>&#xff08;需要翻墙&#xff0c;by Brendan Gregg&#xff09;详细地叙述了ZFS的性能。<br /></p>
<p><br /></p>